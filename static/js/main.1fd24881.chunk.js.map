{"version":3,"sources":["components/Contact/ContactsFile.module.css","components/ContactForm/ContactForm.module.css","components/Contact/ContactItem.js","components/Contact/ContactsFile.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/App.js","index.js","components/Contact/ContactItem.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactItem","name","number","id","onDeleteContact","className","s","item_contact","type","item_button","onClick","prototype","PropTypes","string","isRequired","func","ContactsFile","contacts","contact_list","map","ContactForm","state","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","item_form","label_data","item_input","pattern","title","required","placeholder","onChange","btn_submit","disabled","Component","Filter","item_filter","text_filter","item_element","contactsTest","App","filter","addContact","newContact","uniqueId","find","contact","alert","prevState","deleteContact","contactId","changeFilter","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","normalize","toLowerCase","visibleContacts","includes","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fd24881.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactsFile_contact_list__3iXEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item_form\":\"ContactForm_item_form__1o-wg\",\"item_input\":\"ContactForm_item_input__3xehM\",\"label_data\":\"ContactForm_label_data__E7Fv4\",\"item_contact\":\"ContactForm_item_contact__33sXK\",\"item_text_filter\":\"ContactForm_item_text_filter__1Yo1L\",\"btn_submit\":\"ContactForm_btn_submit__38BZd\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactItem.module.css';\r\n\r\n\r\nconst ContactItem = ({ name, number, id, onDeleteContact }) => (\r\n  <li className={s.item_contact}>\r\n    <p className={s['item-text']}>{name}:</p>\r\n    <p className={s['item-text']}>{number}</p>\r\n    <button\r\n      type=\"button\"\r\n      className={s.item_button}\r\n      onClick={() => onDeleteContact(id)}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactItem.prototype = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from 'prop-types';\r\nimport ContactItem from './ContactItem';\r\nimport s from './ContactsFile.module.css';\r\n\r\nconst ContactsFile = ({ contacts, onDeleteContact }) => (\r\n  <ul className={s.contact_list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactItem\r\n        key={id}\r\n        name={name}\r\n        number={number}\r\n        id={id}\r\n        onDeleteContact={onDeleteContact}\r\n        className={s.item_contact}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactsFile.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string).isRequired),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsFile;\r\n","import React, { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.item_form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label_data}>\r\n          Name\r\n          <input\r\n            className={s.item_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            placeholder=\"Annie Copeland\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.label_data}>\r\n          Phone\r\n          <input\r\n            className={s.item_input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            placeholder=\"111-11-11\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button\r\n          className={s.btn_submit}\r\n          type=\"submit\"\r\n          disabled={name === '' || number === ''}\r\n        >\r\n          Save contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.item_filter}>\r\n    <p className={s.text_filter}>Contacts search</p>\r\n    <input\r\n      className={s.item_element}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport ContactsFile from './Contact';\r\nimport { v4 as uniqueId } from 'uuid';\r\nimport ContactForm from './ContactForm';\r\nimport Filter from './Filter';\r\nimport '../index.css';\r\n\r\nconst contactsTest = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    contacts: contactsTest,\r\n    filter: '',\r\n  };\r\n\r\n  addContact = (name, number) => {\r\n    const { contacts } = this.state;\r\n    const newContact = {\r\n      id: uniqueId(),\r\n      name,\r\n      number,\r\n    };\r\n    if (contacts.find(contact => contact.name === newContact.name)) {\r\n      alert(`${newContact.name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      contacts: [newContact, ...prevState.contacts],\r\n    }));\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = event => {\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n    if (parsedContacts) {\r\n      this.setState({contacts: parsedContacts})\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const normalize = this.state.filter.toLowerCase();\r\n    const visibleContacts = this.state.contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalize),\r\n    );\r\n\r\n    return (\r\n      <div className=\"Container\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactsFile\r\n          contacts={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item_contact\":\"ContactItem_item_contact__1v2_n\",\"item_button\":\"ContactItem_item_button__BJloW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item_filter\":\"Filter_item_filter__EclM-\",\"item_element\":\"Filter_item_element__3yweY\",\"text_filter\":\"Filter_text_filter__1VgdD\"};"],"sourceRoot":""}